\documentclass[journal]{vgtc}                % final (journal style)
%\documentclass[review,journal]{vgtc}         % review (journal style)
%\documentclass[widereview]{vgtc}             % wide-spaced review
%\documentclass[preprint,journal]{vgtc}       % preprint (journal style)
%\documentclass[electronic,journal]{vgtc}     % electronic version, journal

%% Uncomment one of the lines above depending on where your paper is
%% in the conference process. ``review'' and ``widereview'' are for review
%% submission, ``preprint'' is for pre-publication, and the final version
%% doesn't use a specific qualifier. Further, ``electronic'' includes
%% hyperreferences for more convenient online viewing.

%% Please use one of the ``review'' options in combination with the
%% assigned online id (see below) ONLY if your paper uses a double blind
%% review process. Some conferences, like IEEE Vis and InfoVis, have NOT
%% in the past.

%% Please note that the use of figures other than the optional teaser is not permitted on the first page
%% of the journal version.  Figures should begin on the second page and be
%% in CMYK or Grey scale format, otherwise, colour shifting may occur
%% during the printing process.  Papers submitted with figures other than the optional teaser on the
%% first page will be refused.

%% These three lines bring in essential packages: ``mathptmx'' for Type 1
%% typefaces, ``graphicx'' for inclusion of EPS figures. and ``times''
%% for proper handling of the times font family.

\usepackage{mathptmx}
\usepackage{graphicx}
\usepackage{times}
\usepackage{color}
\definecolor{purple}{rgb}{.4,0,.8}
\newcommand{\hh}[1]{{\color{magenta} #1}}
\newcommand{\st}[1]{{\color{purple} #1}}

%% We encourage the use of mathptmx for consistent usage of times font
%% throughout the proceedings. However, if you encounter conflicts
%% with other math-related packages, you may want to disable it.

%% This turns references into clickable hyperlinks.
\usepackage[bookmarks,backref=true,linkcolor=black]{hyperref} %,colorlinks
\hypersetup{
  pdfauthor = {},
  pdftitle = {},
  pdfsubject = {},
  pdfkeywords = {},
  colorlinks=true,
  linkcolor= black,
  citecolor= black,
  pageanchor=true,
  urlcolor = black,
  plainpages = false,
  linktocpage
}

%% If you are submitting a paper to a conference for review with a double
%% blind reviewing process, please replace the value ``0'' below with your
%% OnlineID. Otherwise, you may safely leave it at ``0''.
\onlineid{0}

%% declare the category of your paper, only shown in review mode
\vgtccategory{Research}

%% allow for this line if you want the electronic option to work properly
\vgtcinsertpkg

%% In preprint mode you may define your own headline.
%\preprinttext{To appear in an IEEE VGTC sponsored conference.}

%% Paper title.

\title{Visual inference for networks}

%% This is how authors are specified in the journal style

%% indicate IEEE Member or Student Member in form indicated below
\author{Samantha Tyner, Heike Hofmann \textit{Member, IEEE}}
\authorfooter{
%% insert punctuation at end of each item
\item
 Samantha Tyner is with the Department of Statistics, Iowa State University. E-mail: sctyner@iastate.edu.
\item
 Heike Hofmann is with the Department of Statistics, Iowa State University. E-mail: hofmann@iastate.edu.
}

%other entries to be set up for journal
\shortauthortitle{Tyner \MakeLowercase{\textit{et al.}}: Visual inference for networks}
%\shortauthortitle{Firstauthor \MakeLowercase{\textit{et al.}}: Paper Title}

%% Abstract section.
\abstract{abstract is here} % end of abstract

%% Keywords that describe your work. Will show as 'Index Terms' in journal
%% please capitalize first letter and insert punctuation after last keyword
\keywords{Human subject testing, visual inference, Siena models, network model diagnostics}

%% ACM Computing Classification System (CCS). 
%% See <http://www.acm.org/class/1998/> for details.
%% The ``\CCScat'' command takes four arguments.

% HH: do we need those classifications?
% \CCScatlist{ % not used in journal version
%  \CCScat{K.6.1}{Management of Computing and Information Systems}%
% {Project and People Management}{Life Cycle};
%  \CCScat{K.7.m}{The Computing Profession}{Miscellaneous}{Ethics}
% }

%% Uncomment below to include a teaser figure.
  \teaser{
 \centering
 Teaser picture goes here
  \caption{In the Clouds: Vancouver from Cypress Mountain.}
  }

%% Uncomment below to disable the manuscript note
%\renewcommand{\manuscriptnotetxt}{}

%% Copyright space is enabled by default as required by guidelines.
%% It is disabled by the 'review' option or via the following command:
% \nocopyrightspace

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%% START OF THE PAPER %%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\begin{document}

%% The ``\maketitle'' command must be the first command after the
%% ``\begin{document}'' command. It prepares and prints the title block.

%% the only exception to this rule is the \firstsection command
\firstsection{Introduction}

\maketitle
<<knitr-setup, fig.keep='all', cache=FALSE, echo=FALSE, eval=TRUE, include=FALSE>>=
#rm(list=ls())
options(replace.assign=TRUE,width=70)
require(knitr)
opts_chunk$set(fig.path='figure/', cache.path='cache/', fig.align='center', fig.width=5, fig.height=5, par=TRUE, cache=TRUE, concordance=TRUE, autodep=TRUE, message=F, warning=F)
@

<<packages, echo=FALSE, warning=FALSE, message=FALSE>>=
library(RSiena)
library(network)
library(ggplot2)
library(geomnet)
@
%% \section{Introduction} %for journal use above \firstsection{..} instead

References for the intro: lineup protocol~\cite{buja:2009}, RSiena~\cite{RSiena}. 

\begin{enumerate}
\item Need to complete lineups in 2-3 weeks
\item Lineups: 
  \begin{enumerate}
  \item What sizes? 3, 6, 9, 12
  \item What data? Football, olga's data, teenage friends data?
  \item Other things to consider: coloring of nodes? 
  \item use replicates: different seeds for the same data produces different layouts -
  different draws from the model
  \end{enumerate}
\item Get simulated networds from models from RSiena
\item Figure out another way to fit a model and then simulate from it? 
\end{enumerate}

Possible section outline for paper: \hh{XXX the  outline looks good XXX }
\begin{enumerate}
\item Introduction - visual inference, networks
\item Data and Model fitting \& simulation
\item Lineup methods \hh{XXX what do you mean by `methods' here? Do you mean the Experimental Design?}
\item Results
\item Conclusions and Discussion
\end{enumerate}



\section{Examples \st{??} \hh{this might be able to go into the data and model fitting section. We need both a theoretical bit on the models (at the beginning of the section), and then a discussion of the examples used in the paper. }}

\st{
One of the data sets provided with RSiena is a subset of 50 female respondents from the \emph{Teenage Friends and Lifestyle Study} \cite{michell:1997, pearson:2000, pearson:2003}. There are three friendship networks provided  \hh{are the networks really provided? I thought RSiena estimated the networks based on the girls' drinking and smoking behaviour?} at three timepoints representing the relationships between the 50 teenage girls in the data. There are also actor-level variables observed at each time period, such as a girls' drinking and smoking behavior. These networks are shown in Figure~\ref{fig:friendship_waves}.

\begin{figure}
<<friendship_waves, echo=FALSE, message=FALSE, warning=FALSE, fig.width=7, fig.height=3.35, out.width='\\linewidth'>>=
friend.data.w1 <- as.matrix(read.table("../Data/s50_data/s50-network1.dat"))
friend.data.w2 <- as.matrix(read.table("../Data/s50_data/s50-network2.dat"))
friend.data.w3 <- as.matrix(read.table("../Data/s50_data/s50-network3.dat"))
drink <- as.matrix(read.table("../Data/s50_data/s50-alcohol.dat"))

friend.data.edges <- data.frame(as.edgelist(as.network(friend.data.w1)))
friend.data.nodes <- data.frame(ids = 1:50, drink = drink[,1])
friend.data.net1 <- merge(friend.data.edges, friend.data.nodes, by.x="X1", by.y = "ids", all = T)
friend.data.edges <- data.frame(as.edgelist(as.network(friend.data.w2)))
friend.data.nodes <- data.frame(ids = 1:50, drink = drink[,2])
friend.data.net2 <- merge(friend.data.edges, friend.data.nodes, by.x="X1", by.y = "ids", all = T)
friend.data.edges <- data.frame(as.edgelist(as.network(friend.data.w3)))
friend.data.nodes <- data.frame(ids = 1:50, drink = drink[,3])
friend.data.net3 <- merge(friend.data.edges, friend.data.nodes, by.x="X1", by.y = "ids", all = T)

friend.data.net.all <- rbind(friend.data.net1, friend.data.net2, friend.data.net3)
names(friend.data.net.all)[1:2] <- c('from', 'to')
friend.data.net.all$period <- rep(1:3, c(nrow(friend.data.net1),
                                  nrow(friend.data.net2),
                                  nrow(friend.data.net3)))
friend.data.net.all$year <- friend.data.net.all$period

ggplot(data=friend.data.net.all, aes(from_id = from, to_id = to)) +
  geom_net(aes(colour = as.factor(drink)), size = .75, vjust = .5,
           fontsize = 6, curvature = .25, ealpha = .6, directed = T,
           arrowsize = .5, arrowgap = .01) + theme_net() + 
  scale_color_brewer(palette = "YlOrRd", name = "Drinking Frequency", labels = c("never", "about 2x/year", "about 1x/month", "about 1x/week", "More than 1x/week")) + 
  facet_wrap(~year, nrow = 1, labeller="label_both") +
  theme(legend.position="bottom") +
  guides(col = guide_legend(nrow = 2, override.aes = list(size=3.5)))
@
\caption{\label{fig:friendship_waves}Friendship networks of 50 girls in the \emph{Teenage Friends and Lifestyle Study} over three time periods. Each node represents one of the girls. Nodes are colored by the girl's level of alcohol use.}
\end{figure}
Several actor-oriented longitudinal network models can be fit to this data in RSiena. In order to determine the importance of certain actor-level variable effects included in the models, we simulated networks from different fitted models in Siena, and placed them in lineups to determine if there is any difference between the models.

\par In the fitting of models to the Friends data, there are four effects that are automatically included in model estimation. Two of these are rate parameters for moving from time point one to two and from time point two to three. The other two are the outdegree and the reciprocity effects. The outdegree is just an edge count from each node, and the reciprocity is the count of reciprocated ties from each node. \hh{I'm not sure whether the math should go here or at the beginning - actor models still need to be introduced.} XXX insert more about the math! XXX The documentation and code examples from the RSiena webpage include models to fit to the Friends' data. One of these includes the effects covariate-alter, covariate-ego, and covariate-alter X ego, which are measures of the behavior of a node and its neighbors. XXX insert more math XXX. The RSiena and RSienaTest packages include functions to test the significance of fitted parameters via t-tests, Wald tests, and score-type tests. We used the wald tests and the score-type test to assess the significance of the parameters in this friends model with three covariate effects. The tests found the two rate parameters and the outdegree and reciprocity parameters were significant, but of the covariate effects, only the covariate-alter X ego effect was significant. So, we try to determine if there was a difference visually between the networks with just the four network level variables included and the networks with the significant covariate parameter included.
}

<<fit_models, echo=FALSE, message=FALSE, results='hide'>>=
# First create a 50 * 50 * 3 array composed of the 3 adjacency matrices
friendshipData <- array( c( friend.data.w1, friend.data.w2, friend.data.w3 ),
                         dim = c( 50, 50, 3 ) )
# and next give this the role of the dependent variable:
friendship <- sienaDependent(friendshipData)
alcohol <- varCovar( as.matrix(drink[,1:2]) )
# create siena data object
mydata <- sienaDataCreate( friendship, alcohol)

myeff <- getEffects( mydata )
# 3 actor effects
myeff1 <- includeEffects( myeff, egoX, altX, egoXaltX, interaction1 = "alcohol" )
# 1 actor effect 
myeff2 <- includeEffects( myeff, egoX, interaction1 = "alcohol")
# Create object with algorithm settings
myalgorithm <- sienaAlgorithmCreate( projname = 's50' )
#Estimate parameters
ans1 <- siena07( myalgorithm, data = mydata, effects = myeff1)
ans2 <- siena07( myalgorithm, data = mydata, effects = myeff2)

# create data frames with fitted parameters to use later (need to find a more automated way to do this.)
rate.params <- data.frame(rate.param = c("Rate", "Rate"),
           rate.param.val = ans1$rate)
eval.params <- data.frame(eval.param = c("density", "recip"), eval.param.val = ans1$theta[1:2])
eval.int.params <- data.frame(eval.int.param = c("altX", "egoX", "egoXaltX"), 
                              eval.int.param.val = ans1$theta[3:5])
rate.params2 <- data.frame(rate.param = c("Rate", "Rate"),
                          rate.param.val = ans2$rate)
eval.params2 <- data.frame(eval.param = c("density", "recip"), eval.param.val = ans2$theta[1:2])
eval.int.params2 <- data.frame(eval.int.param = "egoX", 
                              eval.int.param.val = ans2$theta[3])
@


<<simulation_fn, echo=FALSE, message=FALSE>>=
SimulateNextWave <- function(init.waves, V0, 
                                     rate.params.names, rate.params.vals,
                                     eval.params.names, eval.params.vals,
                                     eval.int.params.names, eval.int.params.vals){
  if (ncol(init.waves[,,1]) != nrow(init.waves[,,1])){
    return("Error: Non-square adjacency matrix provided")
  } 
  if (length(eval.params.vals) != length(eval.params.names)){
    return("Error: Number of eval parameters to include in model does not
           match number of eval parameter values provided.")
  }
  if (length(rate.params.vals) != length(rate.params.names)){
    return("Error: Number of rate parameters to include in model does not
           match number of rate parameter values provided.")
  }
  if (length(eval.int.params.vals) != length(eval.int.params.names)){
    return("Error: Number of interaction eval parameters to include in model does not
           match number of interaction eval parameter values provided.")
  }
  init.waves <- friendshipData
  n <- ncol(init.waves[,,1])
  V0 <- drink
  c <- length(unique(V0[,1]))
  p.e <- length(eval.params.names)
  p.r <- length(rate.params.names)
  p.e.i <- length(eval.int.params.names)
  # Simulates M consecutive network and behavior waves, with n actors,
  # with c categories of the behavior variable, from initial network init.net.adj
  # according to a stochastic actor-oriented model with actor covariate V0
  # with parameter values params.values for the parameters of interest params.names
  Va <- varCovar(V0)
  X   <- sienaDependent(init.waves)
  InitData <- sienaDataCreate(X, Va)
  InitEff0 <- getEffects(InitData)
  # sink to avoid printing to the screen
  #sink("eff.txt")
  # Specify the parameters.
  # The rate parameters are first multiplied by 10,
  # which will be used only to get from the totally random network XX[,,1] = X0
  # to the network that will be the simulated first wave.
  
  for (i in 1:p.r){
    InitEff0 <- setEffect(InitEff0, rate.params.names[i], type = 'rate', initialValue = rate.params.vals[i], period = i, character = T)
  }
  for (i in 1:p.e){
    InitEff0 <- setEffect(InitEff0, eval.params.names[i], type = 'eval', initialValue = eval.params.vals[i], character = T)
  }
  for (i in 1:p.e.i){
    InitEff0 <- setEffect(InitEff0, eval.int.params.names[i], type = 'eval', interaction1 = "Va", initialValue = eval.int.params.vals[i], character = T)
  }
  
  ## The parameter given for n3 should be larger than sum(InitEff0$include)
  InitAlg <- sienaAlgorithmCreate(projname="Init", nsub=0,
                                  cond=FALSE, simOnly=TRUE)
  # Simulate the first wave.
  InitSim   <- siena07(InitAlg, data=InitData, eff=InitEff0,
                       returnDeps=TRUE, batch=TRUE, silent=TRUE)
  return(data.frame(InitSim$sims[[1000]][[1]][[1]][[1]]))
}  
@



<<simulate_network, echo=FALSE, message=FALSE, results='hide'>>=
# one from 3-effect model (the "data" model)
sim_dat <- SimulateNextWave(init.waves = friendshipData, V0 = drink, 
                 rate.params.names = rate.params$rate.param, 
                 rate.params.vals = rate.params$rate.param.val,
                 eval.params.names = eval.params$eval.param,
                 eval.params.val = eval.params$eval.param.val,
                 eval.int.params.names = eval.int.params$eval.int.param,
                 eval.int.params.vals = eval.int.params$eval.int.param.val)
sim_dat_net <- merge(sim_dat, data.frame(id =1:50), by.x = "X1", by.y = "id", all = T)

# two from the 1-effect model (the "null" model)
sim_null1 <- SimulateNextWave(init.waves = friendshipData, V0 = drink,                         rate.params.names = rate.params2$rate.param,
                    rate.params.vals = rate.params2$rate.param.val,
                      eval.params.names = eval.params2$eval.param,
                     eval.params.val = eval.params2$eval.param.val,
           eval.int.params.names = eval.int.params2$eval.int.param,
        eval.int.params.vals = eval.int.params2$eval.int.param.val)
sim_null1_net <- merge(sim_null1, data.frame(id =1:50), by.x = "X1", by.y = "id", all = T)
sim_null2 <- SimulateNextWave(init.waves = friendshipData, V0 = drink, 
                       rate.params.names = rate.params2$rate.param, 
                     rate.params.vals = rate.params2$rate.param.val,
                       eval.params.names = eval.params2$eval.param,
                     eval.params.val = eval.params2$eval.param.val,             eval.int.params.names = eval.int.params2$eval.int.param,         eval.int.params.vals = eval.int.params2$eval.int.param.val)
sim_null2_net <- merge(sim_null2, data.frame(id =1:50), by.x = "X1", by.y = "id", all = T)

# null is smaller model
small_lu <- rbind(sim_dat_net, sim_null1_net,sim_null2_net)
small_lu$group <- rep(sample.int(3), c(nrow(sim_dat_net), nrow(sim_null1_net), nrow(sim_null2_net)))
@

\begin{figure}
<<friendship_simulated, dependson='simulate_network', echo=FALSE, message=FALSE, warning=FALSE, fig.width=7, fig.height=3.35, out.width='\\linewidth'>>=
ggplot(small_lu, aes(from_id = X1, to_id = X2)) + 
  geom_net(ealpha = .7, fiteach = T, directed = T, size = 1, arrowsize = .5) + 
  theme_net() + 
  facet_wrap(~group, nrow=1)
@
\caption{\label{fig:simulated}}
\end{figure}

The ``data" model is in panel \#\Sexpr{small_lu$group[1]}.



\subsection{Mezcal Head}

Footnotes are ok%
\footnote{Footnotes appear at the bottom of the column}.



\section{Conclusion}


%% if specified like this the section will be committed in review mode
\acknowledgments{
The authors wish to thank A, B, C. This work was supported in part by
a grant from XYZ.}

\bibliographystyle{abbrv}
%%use following if all content of bibtex file should be shown
%\nocite{*}
\bibliography{references}
\end{document}
